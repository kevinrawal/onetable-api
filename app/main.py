import uvicorn
from fastapi import FastAPI, Request
from app.config.database import set_tenant_schema

from app.routers import authentication_route, onetable_admin_route

app = FastAPI()
app.include_router(authentication_route.router)
app.include_router(onetable_admin_route.router)

@app.middleware("http")
async def db_session_middleware(request: Request, call_next):
    """
    Middleware to handle database session based on tenant ID.
    This middleware extracts the tenant ID from the request headers,
    and sets the tenant schema accordingly.
    It then proceeds to call the next request handler in the chain.
    Args:
        request (Request): The incoming HTTP request.
        call_next (Callable): The next request handler to be called.
    Returns:
        Response: The HTTP response generated by the next request handler.
    """
    
    tenant_id = request.headers.get("X-Tenant-ID")
    if tenant_id:
        set_tenant_schema(tenant_id)
    response = await call_next(request)
    return response


@app.get("/")
async def root():
    return {"message": "Hello World"}

if __name__ == "__main__":
    uvicorn.run(app)
